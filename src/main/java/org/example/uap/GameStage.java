/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.uap;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JRadioButton;

/**
 *
 * @author user
 */
public class GameStage extends javax.swing.JFrame {

    /**
     * Creates new form GameStage
     */
    private final int NUMBER_OF_TOTAL_QUESTIONS = 10;
    private int totalQuestionsAsked = 0;
    private int correctAnswers = 0;
    private String playerName;
    private String difficultyLevel;
    Countdown timer;
    JRadioButton selectedButton;
    Question question = new Question();

    public GameStage() {

    }

    public GameStage(String playerName, String difficultyLevel) throws IOException, FontFormatException {
        initComponents();
        this.playerName = playerName;
        this.difficultyLevel = difficultyLevel;
        questionTextArea.setText(question.print(difficultyLevel));

        playerNameLabel.setText("Player: " + playerName);
        loadOptions(difficultyLevel);
        nextButton.setEnabled(false);
        timer = new Countdown(10);
        timer.start();
    }

    public void loadOptions(String difficultyLevel) throws IOException {
        BufferedReader in = new BufferedReader(new FileReader(difficultyLevel + ".txt"));
        String line;
        int currentLineNumber = 0;
        int lineNumber = question.getLineNumber();
        while ((line = in.readLine()) != null) {
            currentLineNumber++;
            if (currentLineNumber == lineNumber + 1) {
                optionAButton.setText(line);
            } else if (currentLineNumber == lineNumber + 2) {

                optionBButton.setText(line);
            } else if (currentLineNumber == lineNumber + 3) {

                optionCButton.setText(line);
            } else if (currentLineNumber == lineNumber + 4) {

                optionDButton.setText(line);
            }
        }
        in.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionsButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        playerNameLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        lockButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        questionTextArea = new javax.swing.JTextArea();
        optionAButton = new javax.swing.JRadioButton();
        optionBButton = new javax.swing.JRadioButton();
        optionCButton = new javax.swing.JRadioButton();
        optionDButton = new javax.swing.JRadioButton();
        answerValidityLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        playerNameLabel.setFont(new java.awt.Font("Algerian", 0, 22)); // NOI18N
        playerNameLabel.setForeground(new java.awt.Color(51, 51, 51));
        playerNameLabel.setText("Player:");
        jPanel1.add(playerNameLabel);
        playerNameLabel.setBounds(173, 53, 227, 35);

        scoreLabel.setFont(new java.awt.Font("Algerian", 0, 22)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(51, 51, 51));
        scoreLabel.setText("Score:");
        jPanel1.add(scoreLabel);
        scoreLabel.setBounds(950, 53, 165, 35);

        lockButton.setBackground(new java.awt.Color(248, 243, 158));
        lockButton.setFont(new java.awt.Font("Algerian", 0, 16)); // NOI18N
        lockButton.setForeground(new java.awt.Color(51, 51, 51));
        lockButton.setText("Lock");
        lockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockButtonActionPerformed(evt);
            }
        });
        jPanel1.add(lockButton);
        lockButton.setBounds(608, 475, 90, 29);

        nextButton.setBackground(new java.awt.Color(0, 204, 153));
        nextButton.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        nextButton.setForeground(new java.awt.Color(51, 51, 51));
        nextButton.setText("NEXT");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        jPanel1.add(nextButton);
        nextButton.setBounds(1070, 560, 100, 39);

        resetButton.setBackground(new java.awt.Color(0, 204, 153));
        resetButton.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        resetButton.setForeground(new java.awt.Color(51, 51, 51));
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel1.add(resetButton);
        resetButton.setBounds(120, 560, 97, 39);

        questionTextArea.setEditable(false);
        questionTextArea.setBackground(new java.awt.Color(204, 255, 204));
        questionTextArea.setColumns(20);
        questionTextArea.setFont(new java.awt.Font("Arial", 1, 35)); // NOI18N
        questionTextArea.setForeground(new java.awt.Color(51, 51, 51));
        questionTextArea.setLineWrap(true);
        questionTextArea.setRows(5);
        jPanel1.add(questionTextArea);
        questionTextArea.setBounds(172, 124, 1030, 120);

        optionsButtonGroup.add(optionAButton);
        optionAButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        optionAButton.setForeground(new java.awt.Color(51, 51, 51));
        optionAButton.setText("jRadioButton1");
        optionAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionAButtonActionPerformed(evt);
            }
        });
        jPanel1.add(optionAButton);
        optionAButton.setBounds(333, 294, 242, 21);

        optionsButtonGroup.add(optionBButton);
        optionBButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        optionBButton.setForeground(new java.awt.Color(51, 51, 51));
        optionBButton.setText("jRadioButton2");
        optionBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionBButtonActionPerformed(evt);
            }
        });
        jPanel1.add(optionBButton);
        optionBButton.setBounds(821, 294, 243, 21);

        optionsButtonGroup.add(optionCButton);
        optionCButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        optionCButton.setForeground(new java.awt.Color(51, 51, 51));
        optionCButton.setText("jRadioButton3");
        optionCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionCButtonActionPerformed(evt);
            }
        });
        jPanel1.add(optionCButton);
        optionCButton.setBounds(333, 372, 242, 21);

        optionsButtonGroup.add(optionDButton);
        optionDButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        optionDButton.setForeground(new java.awt.Color(51, 51, 51));
        optionDButton.setText("jRadioButton4");
        optionDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionDButtonActionPerformed(evt);
            }
        });
        jPanel1.add(optionDButton);
        optionDButton.setBounds(821, 372, 243, 21);

        answerValidityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(answerValidityLabel);
        answerValidityLabel.setBounds(451, 523, 400, 60);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2316.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1280, 720);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1267, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionAButtonActionPerformed
        if (optionAButton.isSelected()) {
            selectedButton = optionAButton;
        }
    }//GEN-LAST:event_optionAButtonActionPerformed

    private void optionBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionBButtonActionPerformed
        if (optionBButton.isSelected()) {
            selectedButton = optionBButton;
        }
    }//GEN-LAST:event_optionBButtonActionPerformed

    private void optionCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionCButtonActionPerformed
        if (optionCButton.isSelected()) {
            selectedButton = optionCButton;
        }
    }//GEN-LAST:event_optionCButtonActionPerformed

    private void optionDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionDButtonActionPerformed
        if (optionDButton.isSelected()) {
            selectedButton = optionDButton;
        }
    }//GEN-LAST:event_optionDButtonActionPerformed

    private void lockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockButtonActionPerformed
        lockButton.setEnabled(false);
        nextButton.setEnabled(true);
        totalQuestionsAsked++;
        System.out.println(selectedButton.getText());
        try {
            System.out.println(question.getCorrectAnswer(difficultyLevel));
        } catch (IOException ex) {
            Logger.getLogger(GameStage.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (Objects.equals(selectedButton.getText(), question.getCorrectAnswer(difficultyLevel))) {
                correctAnswers++;
            }
        } catch (IOException ex) {
            Logger.getLogger(GameStage.class.getName()).log(Level.SEVERE, null, ex);
        }
        scoreLabel.setText("Score: " + correctAnswers + "/" + totalQuestionsAsked + "/" + NUMBER_OF_TOTAL_QUESTIONS);
        try {
            answerConfirmationLabel();
        } catch (IOException ex) {
            Logger.getLogger(GameStage.class.getName()).log(Level.SEVERE, null, ex);
        }
        timer.stop();
    }//GEN-LAST:event_lockButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        this.dispose();
        Difficulty difficulty = new Difficulty(this.playerName);
        difficulty.setLocationRelativeTo(null);
        difficulty.setVisible(true);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        try {
            questionTextArea.setText(question.print(difficultyLevel));
            loadOptions(difficultyLevel);
            optionsButtonGroup.clearSelection();
            nextButton.setEnabled(false);
            lockButton.setEnabled(true);
            answerValidityLabel.setText("");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        if(totalQuestionsAsked==NUMBER_OF_TOTAL_QUESTIONS){
            this.dispose();
            Result result = new Result(this.playerName, correctAnswers,NUMBER_OF_TOTAL_QUESTIONS);
            result.setSize(580, 350);
            result.setLocationRelativeTo(null);
            result.setVisible(true);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void answerConfirmationLabel() throws IOException {
        if (Objects.equals(selectedButton.getText(), question.getCorrectAnswer(difficultyLevel))) {
            answerValidityLabel.setText("Correct Answer");
            answerValidityLabel.setFont(new Font("Gabriola", Font.PLAIN, 45));
            answerValidityLabel.setForeground(new java.awt.Color(51, 255, 51));
        } else {
            answerValidityLabel.setText("Wrong Answer");
            answerValidityLabel.setFont(new Font("Gabriola", Font.PLAIN, 45));
            answerValidityLabel.setForeground(new java.awt.Color(255, 0, 51));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameStage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameStage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameStage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameStage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameStage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answerValidityLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton lockButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JRadioButton optionAButton;
    private javax.swing.JRadioButton optionBButton;
    private javax.swing.JRadioButton optionCButton;
    private javax.swing.JRadioButton optionDButton;
    private javax.swing.ButtonGroup optionsButtonGroup;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JTextArea questionTextArea;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables
}
